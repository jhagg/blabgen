#!/usr/bin/perl
# require 5.003

use lib '.';			# <VISITOR_LIB>
use strict;
use DBI;
use POSIX;
use Carp;
use Getopt::Long;
use Config::IniFiles;
use vars qw($debug $verbose);

#########################################################
# run this in /var/www/blabgen
my $config = 'conf/config.ini' if -r 'conf/config.ini'; # for debug
$config = 'etc/config.ini' if -r 'etc/config.ini';

my $local_conf = 'conf/local.ini' if -r 'conf/local.ini'; # for debug
$local_conf = 'etc/local.ini' if -r 'etc/local.ini';

my $config_obj = new Config::IniFiles(-file => $config);
die "no config" unless $config_obj;
if (-r $local_conf) {
	$config_obj = new Config::IniFiles(-file => $local_conf,
		-import => $config_obj);
}

sub conf { $config_obj->val(@_); }

#########################################################
GetOptions('d+' => \$debug, 'v+' => \$verbose);

#########################################################
my $dbh = DBI->connect('dbi:mysql:host='.conf('db', 'host').
	';database='.conf('db', 'db'), conf('db', 'user'), conf('db', 'pwd'));
confess($DBI::errstr) unless $dbh;

my $cmd = "select id, name, unix_timestamp(enter_time) ".
	"from pers where to_days(now())-to_days(enter_time) > ".
	conf('gen', 'max_db_age');
my $sth = $dbh->prepare($cmd);
$sth->execute;
my @delete;
while (my @row = $sth->fetchrow_array()) {
	push(@delete, [@row]);
}

for my $id (@delete) {
	print "delete @$id\n" if $verbose;
	my $cmd = "delete from pers where id = $id->[0]";
	print "$cmd\n" if $verbose;
	$dbh->do($cmd) unless $debug;
	my $cmd = "delete from visit where id = $id->[0]";
	print "$cmd\n" if $verbose;
	$dbh->do($cmd) unless $debug;
	my $path = conf('picture', 'dir').
		POSIX::strftime("/%Y-%m-%d/$id->[0].jpg", localtime($id->[2]));
	next unless -e $path;
	print "$path\n" if $verbose;
	unlink($path) unless $debug;
}

my $cmd = "find ".conf('picture', 'maindir')." -type f -mtime +".
	conf('gen', 'max_pict_age')." -name '*.jpg' -o -name '*.jpeg' -o -name '*.png' | xargs rm -f ";
print "$cmd\n" if $verbose;
system($cmd) unless $debug;

$cmd = "find ".conf('picture', 'maindir')." -type d | ".
	"xargs rmdir --ignore-fail-on-non-empty";
print "$cmd\n" if $verbose;
system($cmd) unless $debug;
